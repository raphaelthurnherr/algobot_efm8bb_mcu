C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/02/2018 00:35:21 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\Raph\Go
                    -ogle Drive\dev\embedded_soft\efm8bb\algobot_efm8bb_mcu\V1\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARN
                    -INGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:/Users/Raph/Google Dri
                    -ve/dev/embedded_soft/efm8bb/algobot_efm8bb_mcu/V1/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.2//Dev
                    -ice/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.2//Device/EFM8BB1/inc) PRINT(.\src\Ini
                    -tDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              WDT_0_enter_DefaultMode_from_RESET();
  25   1              PORTS_0_enter_DefaultMode_from_RESET();
  26   1              PORTS_1_enter_DefaultMode_from_RESET();
  27   1              PBCFG_0_enter_DefaultMode_from_RESET();
  28   1              ADC_0_enter_DefaultMode_from_RESET();
  29   1              VREF_0_enter_DefaultMode_from_RESET();
  30   1              CLOCK_0_enter_DefaultMode_from_RESET();
  31   1              TIMER01_0_enter_DefaultMode_from_RESET();
  32   1              TIMER16_2_enter_DefaultMode_from_RESET();
  33   1              TIMER16_3_enter_DefaultMode_from_RESET();
  34   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  35   1              SMBUS_0_enter_DefaultMode_from_RESET();
  36   1              EXTINT_0_enter_DefaultMode_from_RESET();
  37   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  38   1              // [Config Calls]$
  39   1      
  40   1      }
  41          
  42          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  43   1              // $[P0 - Port 0 Pin Latch]
  44   1              // [P0 - Port 0 Pin Latch]$
  45   1      
  46   1              // $[P0MDOUT - Port 0 Output Mode]
  47   1              // [P0MDOUT - Port 0 Output Mode]$
  48   1      
  49   1              // $[P0MDIN - Port 0 Input Mode]
  50   1              /***********************************************************************
  51   1               - P0.0 pin is configured for digital mode
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/02/2018 00:35:21 PAGE 2   

  52   1               - P0.1 pin is configured for digital mode
  53   1               - P0.2 pin is configured for analog mode
  54   1               - P0.3 pin is configured for digital mode
  55   1               - P0.4 pin is configured for digital mode
  56   1               - P0.5 pin is configured for digital mode
  57   1               - P0.6 pin is configured for digital mode
  58   1               - P0.7 pin is configured for digital mode
  59   1               ***********************************************************************/
  60   1              P0MDIN = P0MDIN_B0__DIGITAL | P0MDIN_B1__DIGITAL | P0MDIN_B2__ANALOG
  61   1                              | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
  62   1                              | P0MDIN_B6__DIGITAL | P0MDIN_B7__DIGITAL;
  63   1              // [P0MDIN - Port 0 Input Mode]$
  64   1      
  65   1              // $[P0SKIP - Port 0 Skip]
  66   1              /***********************************************************************
  67   1               - P0.0 pin is not skipped by the crossbar
  68   1               - P0.1 pin is not skipped by the crossbar
  69   1               - P0.2 pin is skipped by the crossbar
  70   1               - P0.3 pin is skipped by the crossbar
  71   1               - P0.4 pin is skipped by the crossbar
  72   1               - P0.5 pin is skipped by the crossbar
  73   1               - P0.6 pin is not skipped by the crossbar
  74   1               - P0.7 pin is not skipped by the crossbar
  75   1               ***********************************************************************/
  76   1              P0SKIP = P0SKIP_B0__NOT_SKIPPED | P0SKIP_B1__NOT_SKIPPED
  77   1                              | P0SKIP_B2__SKIPPED | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED
  78   1                              | P0SKIP_B5__SKIPPED | P0SKIP_B6__NOT_SKIPPED
  79   1                              | P0SKIP_B7__NOT_SKIPPED;
  80   1              // [P0SKIP - Port 0 Skip]$
  81   1      
  82   1              // $[P0MASK - Port 0 Mask]
  83   1              // [P0MASK - Port 0 Mask]$
  84   1      
  85   1              // $[P0MAT - Port 0 Match]
  86   1              // [P0MAT - Port 0 Match]$
  87   1      
  88   1      }
  89          
  90          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
  91   1              // $[P1 - Port 1 Pin Latch]
  92   1              // [P1 - Port 1 Pin Latch]$
  93   1      
  94   1              // $[P1MDOUT - Port 1 Output Mode]
  95   1              /***********************************************************************
  96   1               - P1.0 output is open-drain
  97   1               - P1.1 output is push-pull
  98   1               - P1.2 output is open-drain
  99   1               - P1.3 output is open-drain
 100   1               ***********************************************************************/
 101   1              P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__PUSH_PULL
 102   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN;
 103   1              // [P1MDOUT - Port 1 Output Mode]$
 104   1      
 105   1              // $[P1MDIN - Port 1 Input Mode]
 106   1              // [P1MDIN - Port 1 Input Mode]$
 107   1      
 108   1              // $[P1SKIP - Port 1 Skip]
 109   1              // [P1SKIP - Port 1 Skip]$
 110   1      
 111   1              // $[P1MASK - Port 1 Mask]
 112   1              // [P1MASK - Port 1 Mask]$
 113   1      
 114   1              // $[P1MAT - Port 1 Match]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/02/2018 00:35:21 PAGE 3   

 115   1              // [P1MAT - Port 1 Match]$
 116   1      
 117   1      }
 118          
 119          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 120   1              // $[XBR2 - Port I/O Crossbar 2]
 121   1              /***********************************************************************
 122   1               - Weak Pullups disabled
 123   1               - Crossbar enabled
 124   1               ***********************************************************************/
 125   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_DISABLED | XBR2_XBARE__ENABLED;
 126   1              // [XBR2 - Port I/O Crossbar 2]$
 127   1      
 128   1              // $[PRTDRV - Port Drive Strength]
 129   1              // [PRTDRV - Port Drive Strength]$
 130   1      
 131   1              // $[XBR0 - Port I/O Crossbar 0]
 132   1              /***********************************************************************
 133   1               - UART I/O unavailable at Port pin
 134   1               - SPI I/O unavailable at Port pins
 135   1               - SMBus 0 I/O routed to Port pins
 136   1               - CP0 unavailable at Port pin
 137   1               - Asynchronous CP0 unavailable at Port pin
 138   1               - CP1 unavailable at Port pin
 139   1               - Asynchronous CP1 unavailable at Port pin
 140   1               - SYSCLK unavailable at Port pin
 141   1               ***********************************************************************/
 142   1              XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__ENABLED
 143   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 144   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 145   1              // [XBR0 - Port I/O Crossbar 0]$
 146   1      
 147   1              // $[XBR1 - Port I/O Crossbar 1]
 148   1              /***********************************************************************
 149   1               - All PCA I/O unavailable at Port pins
 150   1               - ECI unavailable at Port pin
 151   1               - T0 routed to Port pin
 152   1               - T1 routed to Port pin
 153   1               - T2 routed to Port pin
 154   1               ***********************************************************************/
 155   1              XBR1 = XBR1_PCA0ME__DISABLED | XBR1_ECIE__DISABLED | XBR1_T0E__ENABLED
 156   1                              | XBR1_T1E__ENABLED | XBR1_T2E__ENABLED;
 157   1              // [XBR1 - Port I/O Crossbar 1]$
 158   1      
 159   1      }
 160          
 161          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
 162   1              // $[ADC0CN1 - ADC0 Control 1]
 163   1              // [ADC0CN1 - ADC0 Control 1]$
 164   1      
 165   1              // $[ADC0MX - ADC0 Multiplexer Selection]
 166   1              /***********************************************************************
 167   1               - Select ADC0.2
 168   1               ***********************************************************************/
 169   1              ADC0MX = ADC0MX_ADC0MX__ADC0P2;
 170   1              // [ADC0MX - ADC0 Multiplexer Selection]$
 171   1      
 172   1              // $[ADC0CF - ADC0 Configuration]
 173   1              /***********************************************************************
 174   1               - SAR Clock Divider = 0x18
 175   1               - ADC0 operates in 10-bit or 12-bit mode 
 176   1               - The on-chip PGA gain is 1
 177   1               - Normal Track Mode
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/02/2018 00:35:21 PAGE 4   

 178   1               ***********************************************************************/
 179   1              ADC0CF = (0x18 << ADC0CF_ADSC__SHIFT) | ADC0CF_AD8BE__NORMAL
 180   1                              | ADC0CF_ADGN__GAIN_1 | ADC0CF_ADTM__TRACK_NORMAL;
 181   1              // [ADC0CF - ADC0 Configuration]$
 182   1      
 183   1              // $[ADC0AC - ADC0 Accumulator Configuration]
 184   1              // [ADC0AC - ADC0 Accumulator Configuration]$
 185   1      
 186   1              // $[ADC0TK - ADC0 Burst Mode Track Time]
 187   1              // [ADC0TK - ADC0 Burst Mode Track Time]$
 188   1      
 189   1              // $[ADC0PWR - ADC0 Power Control]
 190   1              // [ADC0PWR - ADC0 Power Control]$
 191   1      
 192   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
 193   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
 194   1      
 195   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 196   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 197   1      
 198   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
 199   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
 200   1      
 201   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
 202   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
 203   1      
 204   1              // $[ADC0CN0 - ADC0 Control 0]
 205   1              /***********************************************************************
 206   1               - Enable ADC0 
 207   1               ***********************************************************************/
 208   1              ADC0CN0 |= ADC0CN0_ADEN__ENABLED;
 209   1              // [ADC0CN0 - ADC0 Control 0]$
 210   1      
 211   1      }
 212          
 213          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 214   1              // $[Timer Initialization]
 215   1              //Save Timer Configuration
 216   1              uint8_t TCON_save;
 217   1              TCON_save = TCON;
 218   1              //Stop Timers
 219   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 220   1      
 221   1              // [Timer Initialization]$
 222   1      
 223   1              // $[TH0 - Timer 0 High Byte]
 224   1              // [TH0 - Timer 0 High Byte]$
 225   1      
 226   1              // $[TL0 - Timer 0 Low Byte]
 227   1              // [TL0 - Timer 0 Low Byte]$
 228   1      
 229   1              // $[TH1 - Timer 1 High Byte]
 230   1              // [TH1 - Timer 1 High Byte]$
 231   1      
 232   1              // $[TL1 - Timer 1 Low Byte]
 233   1              // [TL1 - Timer 1 Low Byte]$
 234   1      
 235   1              // $[Timer Restoration]
 236   1              //Restore Timer Configuration
 237   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 238   1      
 239   1              // [Timer Restoration]$
 240   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/02/2018 00:35:21 PAGE 5   

 241   1      }
 242          
 243          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 244   1              // $[CKCON0 - Clock Control 0]
 245   1              /***********************************************************************
 246   1               - System clock divided by 12
 247   1               - Counter/Timer 0 uses the system clock
 248   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 249   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 250   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 251   1               - Timer 3 low byte uses the system clock
 252   1               - Timer 1 uses the clock defined by the prescale field, SCA
 253   1               ***********************************************************************/
 254   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_12 | CKCON0_T0M__SYSCLK
 255   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 256   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__SYSCLK
 257   1                              | CKCON0_T1M__PRESCALE;
 258   1              // [CKCON0 - Clock Control 0]$
 259   1      
 260   1              // $[TMOD - Timer 0/1 Mode]
 261   1              /***********************************************************************
 262   1               - Mode 0, 13-bit Counter/Timer
 263   1               - Mode 0, 13-bit Counter/Timer
 264   1               - Counter Mode
 265   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 266   1               - Counter Mode
 267   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 268   1               ***********************************************************************/
 269   1              TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE0 | TMOD_CT0__COUNTER
 270   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__COUNTER | TMOD_GATE1__DISABLED;
 271   1              // [TMOD - Timer 0/1 Mode]$
 272   1      
 273   1              // $[TCON - Timer 0/1 Control]
 274   1              /***********************************************************************
 275   1               - INT0 is edge triggered
 276   1               - INT1 is edge triggered
 277   1               - Start Timer 0 running
 278   1               - Start Timer 1 running
 279   1               ***********************************************************************/
 280   1              TCON |= TCON_IT0__EDGE | TCON_IT1__EDGE | TCON_TR0__RUN | TCON_TR1__RUN;
 281   1              // [TCON - Timer 0/1 Control]$
 282   1      
 283   1      }
 284          
 285          extern void PCA_0_enter_DefaultMode_from_RESET(void) {
 286   1              // $[PCA Off]
 287   1              PCA0CN0_CR = PCA0CN0_CR__STOP;
 288   1              // [PCA Off]$
 289   1      
 290   1              // $[PCA0MD - PCA Mode]
 291   1              /***********************************************************************
 292   1               - PCA continues to function normally while the system controller is in
 293   1               Idle Mode
 294   1               - Disable the CF interrupt
 295   1               - Timer 0 overflow
 296   1               ***********************************************************************/
 297   1              PCA0MD = PCA0MD_CIDL__NORMAL | PCA0MD_ECF__OVF_INT_DISABLED
 298   1                              | PCA0MD_CPS__T0_OVERFLOW;
 299   1              // [PCA0MD - PCA Mode]$
 300   1      
 301   1              // $[PCA0CENT - PCA Center Alignment Enable]
 302   1              // [PCA0CENT - PCA Center Alignment Enable]$
 303   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/02/2018 00:35:21 PAGE 6   

 304   1              // $[PCA0CLR - PCA Comparator Clear Control]
 305   1              // [PCA0CLR - PCA Comparator Clear Control]$
 306   1      
 307   1              // $[PCA0L - PCA Counter/Timer Low Byte]
 308   1              // [PCA0L - PCA Counter/Timer Low Byte]$
 309   1      
 310   1              // $[PCA0H - PCA Counter/Timer High Byte]
 311   1              // [PCA0H - PCA Counter/Timer High Byte]$
 312   1      
 313   1              // $[PCA0POL - PCA Output Polarity]
 314   1              // [PCA0POL - PCA Output Polarity]$
 315   1      
 316   1              // $[PCA0PWM - PCA PWM Configuration]
 317   1              // [PCA0PWM - PCA PWM Configuration]$
 318   1      
 319   1              // $[PCA On]
 320   1              PCA0CN0_CR = PCA0CN0_CR__RUN;
 321   1              // [PCA On]$
 322   1      
 323   1      }
 324          
 325          extern void PCACH_0_enter_DefaultMode_from_RESET(void) {
 326   1              // $[PCA0 Settings Save]
 327   1              // Select Capture/Compare register)
 328   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 329   1              // [PCA0 Settings Save]$
 330   1      
 331   1              // $[PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]
 332   1              /***********************************************************************
 333   1               - Enable negative edge capture
 334   1               - Enable a Capture/Compare Flag interrupt request when CCF0 is set
 335   1               - Disable match function
 336   1               - 8 to 11-bit PWM selected
 337   1               - Disable positive edge capture
 338   1               - Disable comparator function
 339   1               - Disable PWM function
 340   1               - Disable toggle function
 341   1               ***********************************************************************/
 342   1              PCA0CPM0 = PCA0CPM0_CAPN__ENABLED | PCA0CPM0_ECCF__ENABLED
 343   1                              | PCA0CPM0_MAT__DISABLED | PCA0CPM0_PWM16__8_BIT
 344   1                              | PCA0CPM0_CAPP__DISABLED | PCA0CPM0_ECOM__DISABLED
 345   1                              | PCA0CPM0_PWM__DISABLED | PCA0CPM0_TOG__DISABLED;
 346   1              // [PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]$
 347   1      
 348   1              // $[PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]
 349   1              // [PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]$
 350   1      
 351   1              // $[PCA0CPH0 - PCA Channel 0 Capture Module High Byte]
 352   1              // [PCA0CPH0 - PCA Channel 0 Capture Module High Byte]$
 353   1      
 354   1              // $[Auto-reload]
 355   1              // [Auto-reload]$
 356   1      
 357   1              // $[PCA0 Settings Restore]
 358   1              // [PCA0 Settings Restore]$
 359   1      
 360   1      }
 361          
 362          extern void PCACH_1_enter_DefaultMode_from_RESET(void) {
 363   1              // $[PCA0 Settings Save]
 364   1              // Select Capture/Compare register)
 365   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 366   1              // [PCA0 Settings Save]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/02/2018 00:35:21 PAGE 7   

 367   1      
 368   1              // $[PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]
 369   1              /***********************************************************************
 370   1               - Disable negative edge capture
 371   1               - Disable CCF1 interrupts
 372   1               - Disable match function
 373   1               - 16-bit PWM selected
 374   1               - Disable positive edge capture
 375   1               - Enable comparator function
 376   1               - Enable PWM function
 377   1               - Disable toggle function
 378   1               ***********************************************************************/
 379   1              PCA0CPM1 = PCA0CPM1_CAPN__DISABLED | PCA0CPM1_ECCF__DISABLED
 380   1                              | PCA0CPM1_MAT__DISABLED | PCA0CPM1_PWM16__16_BIT
 381   1                              | PCA0CPM1_CAPP__DISABLED | PCA0CPM1_ECOM__ENABLED
 382   1                              | PCA0CPM1_PWM__ENABLED | PCA0CPM1_TOG__DISABLED;
 383   1              // [PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]$
 384   1      
 385   1              // $[PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]
 386   1              // [PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]$
 387   1      
 388   1              // $[PCA0CPH1 - PCA Channel 1 Capture Module High Byte]
 389   1              // [PCA0CPH1 - PCA Channel 1 Capture Module High Byte]$
 390   1      
 391   1              // $[Auto-reload]
 392   1              // [Auto-reload]$
 393   1      
 394   1              // $[PCA0 Settings Restore]
 395   1              // [PCA0 Settings Restore]$
 396   1      
 397   1      }
 398          
 399          extern void SMBUS_0_enter_DefaultMode_from_RESET(void) {
 400   1              // $[SMB0ADR - SMBus 0 Slave Address]
 401   1              /***********************************************************************
 402   1               - General Call Address is ignored
 403   1               - SMBus Hardware Slave Address = 0x0A
 404   1               ***********************************************************************/
 405   1              SMB0ADR = SMB0ADR_GC__IGNORED | (0x0A << SMB0ADR_SLV__SHIFT);
 406   1              // [SMB0ADR - SMBus 0 Slave Address]$
 407   1      
 408   1              // $[SMB0ADM - SMBus 0 Slave Address Mask]
 409   1              // [SMB0ADM - SMBus 0 Slave Address Mask]$
 410   1      
 411   1              // $[SMB0TC - SMBus 0 Timing and Pin Control]
 412   1              // [SMB0TC - SMBus 0 Timing and Pin Control]$
 413   1      
 414   1              // $[SMB0CF - SMBus 0 Configuration]
 415   1              /***********************************************************************
 416   1               - Timer 2 High Byte Overflow
 417   1               - Enable the SMBus module
 418   1               - Enable SDA extended setup and hold times
 419   1               ***********************************************************************/
 420   1              SMB0CF &= ~SMB0CF_SMBCS__FMASK;
 421   1              SMB0CF |= SMB0CF_SMBCS__TIMER2_HIGH | SMB0CF_ENSMB__ENABLED
 422   1                              | SMB0CF_EXTHOLD__ENABLED;
 423   1              // [SMB0CF - SMBus 0 Configuration]$
 424   1      
 425   1      }
 426          
 427          extern void EXTINT_0_enter_DefaultMode_from_RESET(void) {
 428   1              // $[IT01CF - INT0/INT1 Configuration]
 429   1              /***********************************************************************
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/02/2018 00:35:21 PAGE 8   

 430   1               - INT0 input is active high
 431   1               - Select P0.6
 432   1               - INT1 input is active high
 433   1               - Select P0.7
 434   1               ***********************************************************************/
 435   1              IT01CF = IT01CF_IN0PL__ACTIVE_HIGH | IT01CF_IN0SL__P0_6
 436   1                              | IT01CF_IN1PL__ACTIVE_HIGH | IT01CF_IN1SL__P0_7;
 437   1              // [IT01CF - INT0/INT1 Configuration]$
 438   1      
 439   1      }
 440          
 441          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 442   1              // $[EIE1 - Extended Interrupt Enable 1]
 443   1              /***********************************************************************
 444   1               - Enable interrupt requests generated by the ADINT flag
 445   1               - Disable ADC0 Window Comparison interrupt
 446   1               - Disable CP0 interrupts
 447   1               - Disable CP1 interrupts
 448   1               - Disable all Port Match interrupts
 449   1               - Disable all PCA0 interrupts
 450   1               - Enable interrupt requests generated by SMB0
 451   1               - Enable interrupt requests generated by the TF3L or TF3H flags
 452   1               ***********************************************************************/
 453   1              EIE1 = EIE1_EADC0__ENABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 454   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__DISABLED | EIE1_EPCA0__DISABLED
 455   1                              | EIE1_ESMB0__ENABLED | EIE1_ET3__ENABLED;
 456   1              // [EIE1 - Extended Interrupt Enable 1]$
 457   1      
 458   1              // $[EIP1 - Extended Interrupt Priority 1]
 459   1              /***********************************************************************
 460   1               - ADC0 Conversion Complete interrupt set to low priority level
 461   1               - ADC0 Window interrupt set to low priority level
 462   1               - CP0 interrupt set to low priority level
 463   1               - CP1 interrupt set to low priority level
 464   1               - Port Match interrupt set to low priority level
 465   1               - PCA0 interrupt set to low priority level
 466   1               - SMB0 interrupt set to high priority level
 467   1               - Timer 3 interrupts set to high priority level
 468   1               ***********************************************************************/
 469   1              EIP1 = EIP1_PADC0__LOW | EIP1_PWADC0__LOW | EIP1_PCP0__LOW | EIP1_PCP1__LOW
 470   1                              | EIP1_PMAT__LOW | EIP1_PPCA0__LOW | EIP1_PSMB0__HIGH
 471   1                              | EIP1_PT3__HIGH;
 472   1              // [EIP1 - Extended Interrupt Priority 1]$
 473   1      
 474   1              // $[IE - Interrupt Enable]
 475   1              /***********************************************************************
 476   1               - Enable each interrupt according to its individual mask setting
 477   1               - Disable external interrupt 0
 478   1               - Disable external interrupt 1
 479   1               - Disable all SPI0 interrupts
 480   1               - Disable all Timer 0 interrupt
 481   1               - Disable all Timer 1 interrupt
 482   1               - Enable interrupt requests generated by the TF2L or TF2H flags
 483   1               - Disable UART0 interrupt
 484   1               ***********************************************************************/
 485   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 486   1                              | IE_ESPI0__DISABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 487   1                              | IE_ET2__ENABLED | IE_ES0__DISABLED;
 488   1              // [IE - Interrupt Enable]$
 489   1      
 490   1              // $[IP - Interrupt Priority]
 491   1              // [IP - Interrupt Priority]$
 492   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/02/2018 00:35:21 PAGE 9   

 493   1      }
 494          
 495          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 496   1              // $[CLKSEL - Clock Select]
 497   1              /***********************************************************************
 498   1               - Clock derived from the Internal High-Frequency Oscillator
 499   1               - SYSCLK is equal to selected clock source divided by 1
 500   1               ***********************************************************************/
 501   1              CLKSEL = CLKSEL_CLKSL__HFOSC | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 502   1              // [CLKSEL - Clock Select]$
 503   1      
 504   1      }
 505          
 506          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
 507   1              // $[WDTCN - Watchdog Timer Control]
 508   1              //Disable Watchdog with key sequence
 509   1              WDTCN = 0xDE; //First key
 510   1              WDTCN = 0xAD; //Second key
 511   1              // [WDTCN - Watchdog Timer Control]$
 512   1      
 513   1      }
 514          
 515          extern void TIMER16_2_enter_DefaultMode_from_RESET(void) {
 516   1              // $[Timer Initialization]
 517   1              // Save Timer Configuration
 518   1              uint8_t TMR2CN0_TR2_save;
 519   1              TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 520   1              // Stop Timer
 521   1              TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 522   1              // [Timer Initialization]$
 523   1      
 524   1              // $[TMR2CN0 - Timer 2 Control]
 525   1              /***********************************************************************
 526   1               - Enable capture mode
 527   1               ***********************************************************************/
 528   1              TMR2CN0 |= TMR2CN0_TF2CEN__ENABLED;
 529   1              // [TMR2CN0 - Timer 2 Control]$
 530   1      
 531   1              // $[TMR2H - Timer 2 High Byte]
 532   1              // [TMR2H - Timer 2 High Byte]$
 533   1      
 534   1              // $[TMR2L - Timer 2 Low Byte]
 535   1              // [TMR2L - Timer 2 Low Byte]$
 536   1      
 537   1              // $[TMR2RLH - Timer 2 Reload High Byte]
 538   1              /***********************************************************************
 539   1               - Timer 2 Reload High Byte = 0xFF
 540   1               ***********************************************************************/
 541   1              TMR2RLH = (0xFF << TMR2RLH_TMR2RLH__SHIFT);
 542   1              // [TMR2RLH - Timer 2 Reload High Byte]$
 543   1      
 544   1              // $[TMR2RLL - Timer 2 Reload Low Byte]
 545   1              /***********************************************************************
 546   1               - Timer 2 Reload Low Byte = 0xEC
 547   1               ***********************************************************************/
 548   1              TMR2RLL = (0xEC << TMR2RLL_TMR2RLL__SHIFT);
 549   1              // [TMR2RLL - Timer 2 Reload Low Byte]$
 550   1      
 551   1              // $[TMR2CN0]
 552   1              /***********************************************************************
 553   1               - Start Timer 2 running
 554   1               ***********************************************************************/
 555   1              TMR2CN0 |= TMR2CN0_TR2__RUN;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/02/2018 00:35:21 PAGE 10  

 556   1              // [TMR2CN0]$
 557   1      
 558   1              // $[Timer Restoration]
 559   1              // Restore Timer Configuration
 560   1              TMR2CN0 |= TMR2CN0_TR2_save;
 561   1              // [Timer Restoration]$
 562   1      
 563   1      }
 564          
 565          extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
 566   1              // $[Timer Initialization]
 567   1              // Save Timer Configuration
 568   1              uint8_t TMR3CN0_TR3_save;
 569   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 570   1              // Stop Timer
 571   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 572   1              // [Timer Initialization]$
 573   1      
 574   1              // $[TMR3CN0 - Timer 3 Control]
 575   1              // [TMR3CN0 - Timer 3 Control]$
 576   1      
 577   1              // $[TMR3H - Timer 3 High Byte]
 578   1              // [TMR3H - Timer 3 High Byte]$
 579   1      
 580   1              // $[TMR3L - Timer 3 Low Byte]
 581   1              // [TMR3L - Timer 3 Low Byte]$
 582   1      
 583   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 584   1              /***********************************************************************
 585   1               - Timer 3 Reload High Byte = 0xFB
 586   1               ***********************************************************************/
 587   1              TMR3RLH = (0xFB << TMR3RLH_TMR3RLH__SHIFT);
 588   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 589   1      
 590   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 591   1              /***********************************************************************
 592   1               - Timer 3 Reload Low Byte = 0x37
 593   1               ***********************************************************************/
 594   1              TMR3RLL = (0x37 << TMR3RLL_TMR3RLL__SHIFT);
 595   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 596   1      
 597   1              // $[TMR3CN0]
 598   1              /***********************************************************************
 599   1               - Start Timer 3 running
 600   1               ***********************************************************************/
 601   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 602   1              // [TMR3CN0]$
 603   1      
 604   1              // $[Timer Restoration]
 605   1              // Restore Timer Configuration
 606   1              TMR3CN0 |= TMR3CN0_TR3_save;
 607   1              // [Timer Restoration]$
 608   1      
 609   1      }
 610          
 611          extern void VREF_0_enter_DefaultMode_from_RESET(void) {
 612   1              // $[REF0CN - Voltage Reference Control]
 613   1              /***********************************************************************
 614   1               - Enable the Temperature Sensor
 615   1               - The ADC0 ground reference is the GND pin
 616   1               - The internal reference operates at 1.65 V nominal
 617   1               - The ADC0 voltage reference is the VDD pin
 618   1               ***********************************************************************/
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/02/2018 00:35:21 PAGE 11  

 619   1              REF0CN = REF0CN_TEMPE__TEMP_ENABLED | REF0CN_GNDSL__GND_PIN
 620   1                              | REF0CN_IREFLVL__1P65 | REF0CN_REFSL__VDD_PIN;
 621   1              // [REF0CN - Voltage Reference Control]$
 622   1      
 623   1      }
 624          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    201    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
