C51 COMPILER V9.53.0.0   FUNCS                                                             03/13/2018 15:02:40 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE FUNCS
OBJECT MODULE PLACED IN .\funcs.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\Raph\Si
                    -mplicityStudio\v4_workspace\algo_sensor_processing\funcs.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOA
                    -TFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:/Users/Raph/SimplicityStudio/v4_worksp
                    -ace/algo_sensor_processing/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.0//Device/shared/si8051base;C
                    -:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.0//Device/EFM8BB1/inc) PRINT(.\funcs.lst) COND PAGEWIDTH(120)
                    - PAGELENGTH(65) OBJECT(.\funcs.OBJ)

line level    source

   1          /*
   2           * funcs.c
   3           *
   4           *  Created on: 13 mars 2018
   5           *      Author: Raph
   6           */
   7          #include"algo_sensor_processing.h"
   8          
   9          
  10          unsigned char getRegisterValue(unsigned char regAdress){
  11   1              unsigned char temp;
  12   1              unsigned char regValue;
  13   1      
  14   1      
  15   1              switch(regAdress){
  16   2      
  17   2                                                case BOARD_TYPE : regValue = 0x11; break;
  18   2                                                case MCU_FIRMWARE : regValue = 0x0A; break;
  19   2      
  20   2                                                case CTRL_REG :       temp=0;
  21   2                                                                                      temp = temp + ((CNT_IN_4.enable & 0x01)<<7);
  22   2                                                                                      temp = temp + ((CNT_IN_3.enable & 0x01)<<6);
  23   2                                                                                      temp = temp + ((BATTERY.enable & 0x01)<<5);
  24   2                                                                                      temp = temp + ((SONAR.enable & 0x01)<<4);
  25   2                                                                                      temp = temp + ((DIN3.enable & 0x01)<<3);
  26   2                                                                                      temp = temp + ((DIN2.enable & 0x01)<<2);
  27   2                                                                                      temp = temp + ((DIN1.enable & 0x01)<<1);
  28   2                                                                                      temp = temp + ((DIN0.enable & 0x01));
  29   2                                                                                      regValue = temp; break;
  30   2      
  31   2                                                case DIN_STATE :        temp=0;
  32   2                                                                                        temp = temp +(DIN3.value & 0x01)<<3;
  33   2                                                                                        temp = temp + ((DIN2.value & 0x01)<<2);
  34   2                                                                                        temp = temp + ((DIN1.value & 0x01)<<1);
  35   2                                                                                        temp = temp + ((DIN0.value & 0x01));
  36   2                                                                                        regValue = temp; break;
  37   2      
  38   2                                                case SONAR_L : regValue = SONAR.dist_inst_mm & 0x00FF; break;
  39   2                                                case SONAR_H : regValue = (SONAR.dist_inst_mm & 0xFF00)>>8;  break;
  40   2                                                case SONAR_MEAN_L : regValue = SONAR.dist_mean_mm & 0x00FF; break;
  41   2                                                case SONAR_MEAN_H : regValue = (SONAR.dist_mean_mm & 0xFF00)>>8;  break;
  42   2      
  43   2                                                case BATT_L : regValue = BATTERY.voltage_inst_mV & 0x00FF; break;
  44   2                                                case BATT_H : regValue = (BATTERY.voltage_inst_mV & 0xFF00)>>8; break;
  45   2                                                case BATT_MEAN_L : regValue = BATTERY.voltage_mean_mV & 0x00FF; break;
  46   2                                                case BATT_MEAN_H : regValue = (BATTERY.voltage_mean_mV & 0xFF00)>>8; break;
  47   2      
  48   2      
  49   2                                                case FRQ_1 : regValue = CNT_IN_3.frequency; break;
  50   2                                                case FRQ_2 : regValue = CNT_IN_4.frequency; break;
  51   2      
C51 COMPILER V9.53.0.0   FUNCS                                                             03/13/2018 15:02:40 PAGE 2   

  52   2                                                case CNT_1_L : regValue = CNT_IN_3.pulses & 0x00FF; break;
  53   2                                                case CNT_1_H : regValue = (CNT_IN_3.pulses & 0xFF00)>>8; break;
  54   2      
  55   2                                                case CNT_2_L : regValue = CNT_IN_4.pulses & 0x00FF; break;
  56   2                                                case CNT_2_H : regValue = (CNT_IN_4.pulses & 0xFF00)>>8; break;
  57   2      
  58   2                                                case CNT_1_CLEAR : TH0=TL0=0; break;
  59   2                                                case CNT_2_CLEAR : TH1=TL1=0; break;
  60   2      
  61   2                                                default       :       regValue = 0xDD; break;
  62   2                                        }
  63   1                return (regValue);
  64   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    281    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
